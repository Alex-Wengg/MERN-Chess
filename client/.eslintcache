[{"/home/han/Documents/websites/mern/client/src/index.js":"1","/home/han/Documents/websites/mern/client/src/App.js":"2","/home/han/Documents/websites/mern/client/src/reportWebVitals.js":"3","/home/han/Documents/websites/mern/client/src/Components/Container.js":"4","/home/han/Documents/websites/mern/client/src/Components/Header.jsx":"5","/home/han/Documents/websites/mern/client/src/Components/WeatherForm.jsx":"6","/home/han/Documents/websites/mern/client/src/Components/WeatherPanels.jsx":"7","/home/han/Documents/websites/mern/client/src/Components/WeatherInfoPanel.jsx":"8","/home/han/Documents/websites/mern/client/src/Components/WeatherHistoryPanel.jsx":"9","/home/han/Documents/websites/mern/client/src/reducers/index.js":"10","/home/han/Documents/websites/mern/client/src/reducers/weather.js":"11","/home/han/Documents/websites/mern/client/src/reducers/zipCode.js":"12","/home/han/Documents/websites/mern/client/src/reducers/temperature.js":"13","/home/han/Documents/websites/mern/client/src/reducers/history.js":"14"},{"size":742,"mtime":1610762496715,"results":"15","hashOfConfig":"16"},{"size":279,"mtime":1610596631431,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610592479075,"results":"18","hashOfConfig":"16"},{"size":462,"mtime":1610596176658,"results":"19","hashOfConfig":"16"},{"size":398,"mtime":1610594669194,"results":"20","hashOfConfig":"16"},{"size":4317,"mtime":1610763283264,"results":"21","hashOfConfig":"16"},{"size":417,"mtime":1610594753398,"results":"22","hashOfConfig":"16"},{"size":1059,"mtime":1610594739038,"results":"23","hashOfConfig":"16"},{"size":1701,"mtime":1610594719478,"results":"24","hashOfConfig":"16"},{"size":271,"mtime":1610762192492,"results":"25","hashOfConfig":"16"},{"size":430,"mtime":1610762228045,"results":"26","hashOfConfig":"16"},{"size":240,"mtime":1610762241429,"results":"27","hashOfConfig":"16"},{"size":286,"mtime":1610762212796,"results":"28","hashOfConfig":"16"},{"size":714,"mtime":1610762176464,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1oknkkc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/han/Documents/websites/mern/client/src/index.js",[],["61","62"],"/home/han/Documents/websites/mern/client/src/App.js",[],"/home/han/Documents/websites/mern/client/src/reportWebVitals.js",[],"/home/han/Documents/websites/mern/client/src/Components/Container.js",[],"/home/han/Documents/websites/mern/client/src/Components/Header.jsx",[],"/home/han/Documents/websites/mern/client/src/Components/WeatherForm.jsx",["63"],"import React, {Component} from \"react\";\nimport {Form, Button, Row, Col, ButtonGroup, ToggleButton} from \"react-bootstrap\";\nimport axios from 'axios';\nclass WeatherForm extends Component {\n     // default state values\n     state = {\n        tempMetric: \"imperial\",\n        zipCodeInput: \"98052\"\n    }\n\n    componentDidMount() {\n        this.refreshSavedWeather();\n    }\n\n    // Refreshes the current weather data for the most recent zip code, if it exists\n    refreshSavedWeather = () => {\n        if (localStorage.getItem(\"zipCode\")) {\n            axios.post(\"/api/weather\", {\n                zipCode: localStorage.getItem(\"zipCode\"),\n                tempMetric: localStorage.getItem(\"tempMetric\")\n            }).then(d => {\n                localStorage.setItem(\"CurrentWeatherData\", JSON.stringify(d.data));\n            });\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    saveFormData = (event) => {\n        event.preventDefault();\n\n        // Gets the weather data from the weather api and returns it to save into local storage and redux store.\n        axios.post(\"/api/weather\", {\n            zipCode: this.state.zipCodeInput,\n            tempMetric: this.state.tempMetric\n        }).then(response => {\n            let weatherData = response.data;\n\n            this.saveToLocalStorage(weatherData);\n        });\n    }\n\n    // Save data from form to local storage\n    saveToLocalStorage = (weatherData) => {\n        localStorage.setItem(\"zipCode\", this.state.zipCodeInput);\n        localStorage.setItem(\"tempMetric\", this.state.tempMetric);\n        localStorage.setItem(\"CurrentWeatherData\", JSON.stringify(weatherData));\n    }\n\n    saveToMongo = (event) => {\n        axios.post(\"/api/weatherMongo\", {\n            zipCode: this.state.zipCodeInput,\n            tempMetric: this.state.tempMetric\n        }).then(response => {\n            let weatherData = response.data;\n\n            // do whatever you want with the weather data\n        });\n    }\n\n    render() {\n        return (\n            <Form className=\"weather-form\" onSubmit={this.saveToMongo}>\n\n                <Row type=\"flex\" justify=\"center\" align=\"center\" className=\"zipCode\">\n                    <Col>\n                        <span>Zip Code: </span>\n                        <Form.Control name=\"zipCodeInput\"\n                                      type=\"text\"\n                                      placeholder=\"Enter your zip code\"\n                                      onChange={this.onChange}\n                                      className=\"zipCodeInput\"/>\n                    </Col>\n                </Row>\n\n                <Row type=\"flex\" justify=\"center\" align=\"center\">\n                    <Col span={4}>\n                        <ButtonGroup toggle>\n                            <ToggleButton\n                                key={\"C\"}\n                                type=\"radio\"\n                                variant=\"secondary\"\n                                name=\"tempMetric\"\n                                value={\"metric\"}\n                                checked={this.state.tempMetric === \"metric\"}\n                                onChange={this.onChange}\n                            >\n                                Celsius (°C)\n                            </ToggleButton>\n                            <ToggleButton\n                                key={\"F\"}\n                                type=\"radio\"\n                                variant=\"secondary\"\n                                name=\"tempMetric\"\n                                value={\"imperial\"}\n                                checked={this.state.tempMetric === \"imperial\"}\n                                onChange={this.onChange}\n                            >\n                                Fahrenheit (°F)\n                            </ToggleButton>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n\n                <Row type=\"flex\" justify=\"center\" align=\"center\">\n                    <Col span={4}>\n                        <Button className=\"save-btn\" variant=\"primary\" type=\"submit\">\n                            Save\n                        </Button>\n                    </Col>\n                </Row>\n\n            </Form>\n        );\n    }\n}\n\nexport default WeatherForm;","/home/han/Documents/websites/mern/client/src/Components/WeatherPanels.jsx",[],"/home/han/Documents/websites/mern/client/src/Components/WeatherInfoPanel.jsx",[],"/home/han/Documents/websites/mern/client/src/Components/WeatherHistoryPanel.jsx",[],["64","65"],"/home/han/Documents/websites/mern/client/src/reducers/index.js",[],"/home/han/Documents/websites/mern/client/src/reducers/weather.js",[],"/home/han/Documents/websites/mern/client/src/reducers/zipCode.js",[],"/home/han/Documents/websites/mern/client/src/reducers/temperature.js",[],"/home/han/Documents/websites/mern/client/src/reducers/history.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":57,"column":17,"nodeType":"72","messageId":"73","endLine":57,"endColumn":28},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'weatherData' is assigned a value but never used.","Identifier","unusedVar",["76"],["77"],"no-global-assign","no-unsafe-negation"]